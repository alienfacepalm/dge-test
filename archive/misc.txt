/*
  Scenario:

const ab = 
{
  "actions": {
    "action-00": {
      "id": "action-00",
      "nextActionId": null,
      "actionType": "addToSegmentAction",
      "parentBranchId": null
    },
    "action-10": {
      "id": "action-10",
      "nextActionId": "action-11",
      "actionType": "assignCSMAction",
      "parentBranchId": "branch-1"
    },
    "action-11": {
      "id": "action-11",
      "nextActionId": null,
      "actionType": "startConversationAction",
      "parentBranchId": "branch-1"
    },
    "action-20": {
      "id": "action-20",
      "nextActionId": "action-21",
      "actionType": "assignCSMAction",
      "parentBranchId": "branch-2"
    },
    "action-21": {
      "id": "action-21",
      "nextActionId": "action-22",
      "actionType": "addToSegmentAction",
      "parentBranchId": "branch-2"
    },
    "action-22": {
      "id": "action-22",
      "nextActionId": null,
      "actionType": "createIndicatorAction",
      "parentBranchId": "branch-2"
    },
    "action-30": {
      "id": "action-30",
      "nextActionId": "action-31",
      "actionType": "assignCSMAction",
      "parentBranchId": "branch-3"
    },
    "action-31": {
      "id": "action-31",
      "nextActionId": null,
      "actionType": "startConversationAction",
      "parentBranchId": "branch-3"
    }
  },
  "branches": {
    "branch-1": {
      "id": "branch-1",
      "parentBranchId": null,
      "name": "$1K - $2K MRR",
      "position": 1,
      "filters": [
        {
          "property": "mrr",
          "value": 2000,
          "operator": "less"
        }
      ]
    },
    "branch-2": {
      "id": "branch-2",
      "parentBranchId": null, 
      "name": "< $1K MRR",
      "position": 0,
      "filters": [
        {
          "property": "mrr",
          "value": 1000,
          "operator": "less"
        }
      ]
    },
    "branch-3": {
      "id": "branch-3",
      "parentBranchId": null,
      "name": "Otherwise",
      "position": 2147483647,
      "filters": []
    }
  }
}

// Customer
{
  "churnedAt": null,
  "mrr": 200,
  "trialEndDate": "2021-09-09T00:44:56.421Z",
  "type": "subscribed",
  "firstPaidDate": "2022-10-06T00:44:56.421Z",
  "name": "Airbnb",
  "id": "fa26cef6-fadc-4d89-b270-1e1ac3f3c1b7"
}

Result - what is this used for?? Where will be using this
[
  { "playbookActionId": "action-00" }, 
  { "playbookBranchId": "branch-2" },
  { "playbookActionId": "action-20" },
  { "playbookActionId": "action-21" },
  { "playbookActionId": "action-22" }
]

// MRR 3000
[
  { "playbookActionId": "action-00" }, // no parent
  { "playbookBranchId": "branch-3" }, 
  { "playbookActionId": "action-30" },
  { "playbookActionId": "action-31" },
]

Let's arrange these into a pattern usable - sort them so that each branch has actions listed out to reach the desired result. 



	branch1: [
  	{
      "id": "action-10",
      "nextActionId": "action-11",
      "actionType": "assignCSMAction",
      "parentBranchId": "branch-1"
    },
    {
      "id": "action-11",
      "nextActionId": null,
      "actionType": "startConversationAction",
      "parentBranchId": "branch-1"
    },
  ]
  branch2: [
  	
  ]


function runTest(customer, entities) {
  

  return [];
};

*/


const processActions = (customerData, ab) => {
  if (!actions) return null 
  
  const output = []
  
  // action parentId null means that's our start
  // which was branch was chosen: this uses filters 
  // somehow we found branch 2  using filters?

  // findBranch we found branch-2
  // therefore we we use `branch-2` to find the next actions by the parentBranchId
  // find all actions with branch-2 and sequence them by sort??? or check sure 
  
  // use mrr from customer data to find the branch
  const branch = ab.branches.find(branch => {
    
    for(let filter of branches.filters) {
      if (filter.property === "mrr") {
        const operator = filter.operator
        const value = filter.value
        
        if (operator === "less" ) {
          if (customerData.mrr < Number(value)) {
            return branch.id
          }
        }  
        
      }
    }
  })
  
  // found the branch now find the actions to actions
  
  
  // 
  
  /*
  Hey - can you join the google hangout again? 
  ok - 
  
  yeah trying, it's hanging, it says asking to be let in and spinning
  
  
  would you if we did phone call instead ?
  
  */
    425.505.3292
  
    
  return output
}

/*
 * Can you join new hangout
 * 
//  https://meet.google.com/aip-ycsw-uyg?authuser=0































